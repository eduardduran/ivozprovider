<?php

namespace Ivoz\Cgr\Infrastructure\Persistence\Doctrine;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\NativeQuery;
use Ivoz\Cgr\Domain\Model\TpDestinationRate\TpDestinationRateRepository;
use Ivoz\Cgr\Domain\Model\TpDestinationRate\TpDestinationRate;
use Ivoz\Core\Infrastructure\Domain\Service\DoctrineQueryRunner;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * TpDestinationRateDoctrineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TpDestinationRateDoctrineRepository extends ServiceEntityRepository implements TpDestinationRateRepository
{
    protected $queryRunner;

    public function __construct(
        RegistryInterface $registry,
        DoctrineQueryRunner $queryRunner
    ) {
        parent::__construct($registry, TpDestinationRate::class);
        $this->queryRunner = $queryRunner;
    }

    /**
     * @param int $destinationRateGroupId
     * @return int affected rows
     */
    public function syncWithBussines($destinationRateGroupId)
    {
        $tpDestinationRatesInsert =
            "INSERT IGNORE tp_destination_rates (tpid, tag, destinations_tag, rates_tag, destinationRateId)
            SELECT CONCAT('b', DRG.brandId), CONCAT('b', DRG.brandId, 'dr', DRG.id), CONCAT('b', DRG.brandId, 'dst', DR.destinationId),
             CONCAT('b', DRG.brandId, 'rt', DR.id), DR.id
              FROM DestinationRates DR
              INNER JOIN DestinationRateGroups DRG ON DRG.id = DR.destinationRateGroupId
              WHERE DRG.id = $destinationRateGroupId";

        $nativeQuery = new NativeQuery($this->_em);
        $nativeQuery->setSQL($tpDestinationRatesInsert);

        return $this->queryRunner->execute(
            TpDestinationRate::class,
            $nativeQuery
        );
    }
}
