<?php

namespace Ivoz\Provider\Infrastructure\Persistence\Doctrine;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\NativeQuery;
use Ivoz\Provider\Domain\Model\Destination\DestinationRepository;
use Ivoz\Provider\Domain\Model\Destination\Destination;
use Ivoz\Core\Infrastructure\Domain\Service\DoctrineQueryRunner;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * DestinationDoctrineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DestinationDoctrineRepository extends ServiceEntityRepository implements DestinationRepository
{
    protected $queryRunner;

    public function __construct(
        RegistryInterface $registry,
        DoctrineQueryRunner $queryRunner
    ) {
        parent::__construct($registry, Destination::class);
        $this->queryRunner = $queryRunner;
    }

    /**
     * @param array $destinations
     * @return int affected rows
     * @throws \Doctrine\DBAL\ConnectionException
     * @throws \Doctrine\DBAL\DBALException
     */
    public function insertIgnoreFromArray(array $destinations)
    {
        $destinationInsert =
            'INSERT IGNORE INTO Destinations (prefix, name_en, name_es, brandId) VALUES '
            . implode(",", $destinations);

        $nativeQuery = new NativeQuery($this->_em);
        $nativeQuery->setSQL($destinationInsert);

        return $this->queryRunner->execute(
            Destination::class,
            $nativeQuery
        );
    }
}
